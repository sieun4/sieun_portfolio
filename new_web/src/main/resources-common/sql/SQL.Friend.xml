<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.iot.dao.FriendDao"> <!-- DAO 구현체 -->
	<select id="count" resultType="int">
		SELECT COUNT(*) FROM iot.friend
		WHERE 1=1
		<if
			test="(searchType != null and searchType == 'all') and searchText != ''">
			AND (friend_id LIKE CONCAT('%', #{searchText}, '%')
			OR freind_nickname LIKE CONCAT('%', #{searchText}, '%')
			OR memo LIKE CONCAT('%', #{searchText}, '%'))
		</if>
		<if
			test="(searchType != null and searchType == 'friendId') and searchText != ''">
			AND friend_id LIKE CONCAT('%', #{searchText}, '%')
		</if>
		<if
			test="(searchType != null and searchType == 'friendNickname') and searchText != ''">
			AND friend_nickname LIKE CONCAT('%', #{searchText}, '%')
		</if>
		<if
			test="(searchType != null and searchType == 'memo') and searchText != ''">
			AND memo LIKE CONCAT('%', #{searchText}, '%')
		</if>
	</select>
	
	<select id="list" parameterType="HashMap" resultType="HashMap">
		SELECT * FROM iot.friend
		WHERE 1=1
		<if
			test="(searchType != null and searchType == 'all') and searchText != ''">
			AND (friend_id LIKE CONCAT('%', #{searchText}, '%')
			OR freind_nickname LIKE CONCAT('%', #{searchText}, '%')
			OR memo LIKE CONCAT('%', #{searchText}, '%'))
		</if>
		<if
			test="(searchType != null and searchType == 'friendId') and searchText != ''">
			AND friend_id LIKE CONCAT('%', #{searchText}, '%')
		</if>
		<if
			test="(searchType != null and searchType == 'friendNickname') and searchText != ''">
			AND friend_nickname LIKE CONCAT('%', #{searchText}, '%')
		</if>
		<if
			test="(searchType != null and searchType == 'memo') and searchText != ''">
			AND memo LIKE CONCAT('%', #{searchText}, '%')
		</if>
		ORDER BY seq DESC
		LIMIT #{startArticleNo}, #{pageArticle}
		<!-- 매개변수를 (int startArticleNo, int pageArticle)로 받았을 경우 #{0}, #{1} -->
		<!-- 쿼리가 길어지면 0, 1, 2, 3... 으로 알아보기 어렵기 때문에 주로 HashMap으로 받아서 씀 -->
	</select>
</mapper>